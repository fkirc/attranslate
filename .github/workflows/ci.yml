name: Tests

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - '**/*.md'
  workflow_dispatch:
    inputs:
      release:
        description: 'Release'
        required: true
        default: 'true'
      new_version:
        description: 'New version'
        required: true
        default: 'one of <newversion> | major | minor | patch | premajor | preminor | prepatch | prerelease'

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}
          paths_ignore: '["**/*.md"]'

  ci:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip == 'false' }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest' ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.CI_PAT }} # Regular GitHub tokens cannot push to protected branches
      - run: git config --global user.email "mail@felixkirchengast.at"
      - run: git config --global user.name "Felix Kirchengast (GitHub Action)"
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install --frozen-lockfile
      - run: yarn lint
      - run: yarn build
      - run: yarn link
      - run: yarn preTest
        env:
          GCLOUD_PRIVATE_KEY: ${{ secrets.GCLOUD_PRIVATE_KEY }}
      - run: yarn test
      - run: git diff --exit-code
      - name: Release
        if: ${{ github.event.inputs.release == 'true' }}
        run: |
          npm version ${{ github.event.inputs.new_version }} --git-tag-version=true
          npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
          npm publish
          git push origin && git push origin --tags
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
